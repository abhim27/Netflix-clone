{"version":3,"sources":["axios.js","requests.js","Components/Banner.js","Components/Navbar.js","Components/Row.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","API_KEY","requests","fetchTrending","concat","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","str","n","_useState","useState","_useState2","_slicedToArray","movie","setMovie","_useState3","_useState4","trailerurl","setTrailerurl","useEffect","_fetchData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","request","wrap","_context","prev","next","get","sent","data","results","Math","floor","random","length","abrupt","stop","apply","arguments","fetchData","_jsxs","children","className","onClick","style","backgroundSize","backgroundImage","backdrop_path","backgroundPosition","_jsx","title","name","original_name","movieTrailer","then","url","urlParams","URLSearchParams","URL","search","catch","error","console","log","handleClick","overview","substr","YouTube","videoId","opts","height","width","playerVars","autoplay","Navbar","show","handleShow","window","addEventListener","scrollY","removeEventListener","src","alt","Row","_ref","fetchUrl","isLargeRow","movies","setMovies","trailerUrl","setTrailerUrl","map","poster_path","id","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.41879332.chunk.js","sourcesContent":["import axios from \"axios\";\n\n\nconst  instance = axios.create({\n    baseURL: \"https://api.themoviedb.org/3\"\n});\n\nexport default instance;","const API_KEY = \"76deadecb4e996be0639c6b2a624a68c\" ;\n\nconst requests = {\n    fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\n    fetchNetflixOriginals:`/discover/tv?api_key=${API_KEY}&with_networks=213`,\n    fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US` ,\n    fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\n    fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\n    fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\n    fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\n    fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\n}\nexport default requests;","import React, { useEffect, useState } from 'react';\nimport './Banner.css';\nimport axios from '../axios';\nimport requests from '../requests';\nimport movieTrailer from 'movie-trailer';\nimport YouTube from 'react-youtube';\n\nfunction Banner() {\n  const [movie, setMovie] = useState([]);\n  const [trailerurl, setTrailerurl] = useState(\"\");\n\n  useEffect(() => {\n      \n    async function fetchData() {\n        const request = await axios.get(requests.fetchNetflixOriginals) ;\n\n        setMovie(\n            request.data.results[\n                Math.floor(Math.random() * request.data.results.length - 1)\n            ]\n        );\n        return request;\n       \n    } fetchData();\n\n  }, []) \n\n   function truncate(str ,n) {\n      return str?.length > n ? str.substr(0, n - 1) + \"...\" : str;  };\n\n      const handleClick = (movie) => {\n        \n        if(trailerurl){\n          setTrailerurl(\"\");\n        }else{\n          movieTrailer(movie?.name || \"\")\n          .then(url => {\n            const urlParams = new URLSearchParams( new URL(url).search);\n            setTrailerurl(urlParams.get('v'));\n   \n          }).catch(error => console.log(error))\n        }\n          };\n\n          const opts = {\n            height: \"390\",\n            width: \"100%\",\n            playerVars: {\n              autoplay:1,\n            },\n          }\n  \n    return (\n      <div>\n       <header className=\"banner\"\n       onClick={() => setTrailerurl(\"\")}\n       style={{\n           backgroundSize: \"cover\",\n           backgroundImage: `url(\n               \"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\"\n           )`,\n           backgroundPosition: \"center-center\",\n       }}\n       >\n\n           <div className=\"banner__contents\">\n\n               <h1 className=\"banner__title\">\n                   {movie?.title || movie?.name || movie?.original_name}\n               </h1>\n               <div className=\"banner__buttons\">\n\n                   <button\n                    onClick={()=> handleClick(movie)}\n\n                     className=\"banner__button\">\n                     Play\n                   </button>\n                   <button className=\"banner__button\">\n                     My List \n                   </button>\n\n               </div>\n              <h1 className=\"banner__description\">\n\n                  {truncate(movie?.overview, 150)}\n\n              </h1>\n           </div>\n         \n         <div className=\"banner--fadeBottom\"/>\n         \n       </header>\n      \n       {trailerurl && <YouTube\n             videoId={trailerurl}  \n             opts={opts}\n            />} \n      </div>\n    )\n}\n\nexport default Banner\n","import React, { useEffect, useState } from 'react';\nimport './Navbar.css';\n\n\nfunction Navbar() {\n\n    const [show, handleShow] = useState(false);\n\n  useEffect(() => {\n      window.addEventListener(\"scroll\", () =>{\n          if(window.scrollY > 100){\n              handleShow(true);\n          }else handleShow(false);\n      });\n      return () => {\n          window.removeEventListener(\"scroll\");\n      }\n    \n  }, [])\n\n    return (\n        <div className={`navbar ${show && \"nav__black\"}`}>\n            \n            <img\n            className=\"nav__logo\"\n             src=\"http://www.freepnglogos.com/uploads/netflix-logo-0.png\"\n            alt=\"NETFLIX\" />\n            <img\n            className=\"nav__avatar\"\n            src=\"https://upload.wikimedia.org/wikipedia/commons/0/0b/Netflix-avatar.png\"\n            alt=\"AVATAR\"\n            />\n            \n        </div>\n    )\n}\n\nexport default Navbar;\n","import React, { useEffect, useState } from 'react';\nimport './Row.css';\nimport axios from '../axios';\nimport YouTube from 'react-youtube';\nimport movieTrailer from 'movie-trailer'\n\nconst baseUrl = \"https://image.tmdb.org/t/p/original/\";\n\nfunction Row({ title , fetchUrl, isLargeRow }) {\n  const [movies, setMovies] = useState([]);\n  \n  const [trailerUrl, setTrailerUrl] = useState(\"\");\n\n  useEffect(() => {\n    async function fetchData(){\n     const request = await axios.get(fetchUrl);\n     setMovies(request.data.results);\n     return request;\n    } fetchData();\n    \n  }, [fetchUrl]);\n \n   const opts = {\n     height: \"390\",\n     width: \"100%\",\n     playerVars: {\n       autoplay:1,\n     },\n   }\n     \n   const handleClick = (movie) => {\n     if(trailerUrl){\n       setTrailerUrl(\"\");\n     }else{\n       movieTrailer(movie?.name || \"\")\n       .then(url => {\n         const urlParams = new URLSearchParams( new URL(url).search);\n         setTrailerUrl(urlParams.get('v'));\n\n       }).catch(error => console.log(error))\n     }\n       };\n\n    return (\n        <div className=\"row\" >\n            <h2>{title}</h2>\n\n            <div className=\"row__posters\" >\n\n              {movies?.map(movie =>(\n                <img \n                key={movie.id}\n                onClick={()=> handleClick(movie)}\n                className={`row__poster  ${isLargeRow && \"row__posterLarge\"} `}\n                src={`${baseUrl}${isLargeRow ? movie?.poster_path : movie?.backdrop_path}`}\n                alt={movie.name} \n                \n                />\n              ))}\n\n            </div>\n            {trailerUrl && <YouTube\n             videoId={trailerUrl}  \n             opts={opts}\n            />}\n        </div>\n    )\n}\n\nexport default Row;\n","import './App.css';\nimport Banner from './Components/Banner';\nimport Navbar from './Components/Navbar';\nimport Row from './Components/Row';\nimport requests from './requests';\n\n\n\nfunction App() {\n  return (\n    <div className=\"app\">\n\n      <Navbar />\n      \n      <Banner />\n       \n      <Row title=\"NETFLIX ORIGINALS\" fetchUrl={requests.fetchNetflixOriginals} \n      isLargeRow />\n\n      <Row title=\"Trending now\" fetchUrl={requests.fetchTrending} />\n\n      <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated} />\n\n      <Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies} />\n\n      <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies} />\n\n      <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies} />\n\n      <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies} />\n\n      <Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries} />\n\n     \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}